---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/articles":
    get:
      summary: Retrieves all articles
      tags:
      - API::V1 -> Articles
      responses:
        '200':
          description: articles found
          content:
            application/json:
              example:
                data:
                - id: 445
                  title: heavy lifting
                  body: Rerum aut non exercitationem.
                  header_image: http://kuvalis.net/bulah
                  full_article_link: http://legros.biz/neil
                  video_link: http://dubuque.org/thanh_fay
                  campaign_action_id: 3715
                  campaign_id: 8117
                  created_at: '2021-10-03T15:38:44.463Z'
                  updated_at: '2021-10-03T15:38:44.463Z'
                  video_of_the_day:
                  subtitle: deep dive
                  link_text: http://koelpin.biz/elroy
                  source: http://ondricka-rau.io/zofia
                  enabled: true
                  release_date: '2021-04-26T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
  "/api/v1/articles/{id}":
    get:
      summary: Retrieves a article
      tags:
      - API::V1 -> Articles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: article found
          content:
            application/json:
              example:
                data:
                  id: 446
                  title: synergy
                  body: Perferendis harum cupiditate magnam.
                  header_image: http://johnston.name/delbert
                  full_article_link: http://maggio-halvorson.com/florentina
                  video_link: http://dubuque-pollich.biz/guillermina
                  campaign_action_id: 3716
                  campaign_id: 8119
                  created_at: '2021-10-03T15:38:44.505Z'
                  updated_at: '2021-10-03T15:38:44.505Z'
                  video_of_the_day:
                  subtitle: deep dive
                  link_text: http://sauer-feest.biz/jean_kunde
                  source: http://wunsch.co/kelvin
                  enabled: true
                  release_date: '2021-01-25T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Article with 'id'=something_invalid
  "/api/v1/blogs":
    get:
      summary: Retrieves all blogs
      tags:
      - API::V1 -> Blogs
      responses:
        '200':
          description: blogs found
          content:
            application/json:
              example:
              - id: 583
                title: out of pocket
                subtitle: Fuga in omnis at.
                campaign_action_id: 3718
                user_id: 5176
                campaign_id: 8123
                reading_time: 5
                created_at: '2021-10-03T15:38:44.605Z'
                updated_at: '2021-10-03T15:38:44.605Z'
                enabled: true
                header_image: http://mcglynn.biz/victoria_wintheiser
                tags: []
                user:
                  full_name: Romana Walter
                  profile_picture_url:
                  description:
  "/api/v1/blogs/{id}":
    get:
      summary: Retrieves a blog
      tags:
      - API::V1 -> Blogs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: blog found
          content:
            application/json:
              example:
                data:
                  blog:
                    id: 584
                    title: plug and chug
                    subtitle: Animi voluptas deleniti eum.
                    campaign_action_id: 3719
                    user_id: 5177
                    campaign_id: 8125
                    reading_time: 54
                    created_at: '2021-10-03T15:38:44.663Z'
                    updated_at: '2021-10-03T15:38:44.663Z'
                    enabled: true
                    header_image: http://kunze-hane.biz/ada
                    tags: []
                    user:
                      full_name: John White IV
                      profile_picture_url:
                      description:
                sections: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  subtitle:
                    type: string
                  campaign_action_id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  reading_time:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  enabled:
                    type: boolean
                  header_image:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find BlogArticle with 'id'=something_invalid
  "/api/v1/campaigns":
    get:
      summary: Retrieves all Campaigns
      tags:
      - API::V1 -> Campaigns
      responses:
        '200':
          description: Campaigns found
          content:
            application/json:
              example:
                data:
                - id: 8128
                  title: let's take this offline
                  description_app: Soluta dolores et culpa.
                  header_image: http://grimes-stroman.com/markita
                  created_at: '2021-10-03T15:38:44.712Z'
                  updated_at: '2021-10-03T15:38:44.712Z'
                  video_link: http://graham-wilkinson.com/magnolia_fritsch
                  description_web:
                  enabled: true
                  start_date: '2021-01-03T00:00:00.000Z'
                  end_date: '2021-12-25T00:00:00.000Z'
                  short_name: Ethical flexitarian vinegar leggings yolo listicle fanny
                    pack hashtag normcore.
                  number_of_campaigners: 0
                  number_of_completed_actions: 0
                  general_partners: []
                  campaign_partners: []
                  sdgs: []
                  key_aims: []
                  campaign_actions: []
                  learning_topics: []
                  infographic_url: http://boyle.com/nola
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
  "/api/v1/campaigns/{campaign_id}":
    get:
      summary: Retrieves a Campaign
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                  id: 8129
                  title: thought leader
                  description_app: Ut perspiciatis officiis dolor.
                  header_image: http://roob.net/micah
                  created_at: '2021-10-03T15:38:44.762Z'
                  updated_at: '2021-10-03T15:38:44.762Z'
                  video_link: http://cremin.co/donetta
                  description_web:
                  enabled: true
                  start_date: '2021-09-23T00:00:00.000Z'
                  end_date: '2021-07-28T00:00:00.000Z'
                  short_name: Wes anderson raw denim brunch food truck tilde artisan
                    +1.
                  number_of_campaigners: 0
                  number_of_completed_actions: 0
                  general_partners: []
                  campaign_partners: []
                  sdgs: []
                  key_aims: []
                  campaign_actions: []
                  learning_topics: []
                  infographic_url: http://dach.com/kristeen
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions":
    get:
      summary: Retrieves a Campaigns actions
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaigns actions found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}":
    get:
      summary: Retrieves a Campaigns action through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                  id: 3721
                  title: let's take this offline
                  link: http://bergnaum-larkin.net/jacqui
                  type:
                  campaign_id: 8133
                  created_at: '2021-10-03T15:38:44.805Z'
                  updated_at: '2021-10-03T15:38:44.805Z'
                  what_description: Dolore neque mollitia impedit.
                  why_description: Eaque laborum ab atque.
                  time: 0.1
                  enabled: true
                  release_date: '2021-03-19T00:00:00.000Z'
                  end_date: '2021-07-23T00:00:00.000Z'
                  campaign:
                    id: 8133
                    title: market share
                    description_app: Velit ut nulla et.
                    header_image: http://morar-murazik.com/verna
                    created_at: '2021-10-03T15:38:44.802Z'
                    updated_at: '2021-10-03T15:38:44.802Z'
                    video_link: http://kuphal-kertzmann.com/natasha
                    description_web:
                    enabled: true
                    start_date: '2021-08-30T00:00:00.000Z'
                    end_date: '2021-10-25T00:00:00.000Z'
                    short_name: Bespoke humblebrag church-key sustainable cliche tumblr
                      put a bird on it flannel.
                    infographic_url: http://jones.co/bruce_nicolas
                    number_of_campaigners: 0
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find CampaignAction with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}/articles":
    get:
      summary: Retrieves a Campaigns articles through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                - id: 449
                  title: impact map
                  body: Quo rerum voluptate deleniti.
                  header_image: http://vonrueden.info/herminia
                  full_article_link: http://schumm-rice.org/wilma.quitzon
                  video_link: http://waelchi-littel.io/samella.lehner
                  campaign_action_id: 3723
                  campaign_id: 8138
                  created_at: '2021-10-03T15:38:44.856Z'
                  updated_at: '2021-10-03T15:38:44.856Z'
                  video_of_the_day:
                  subtitle: best practice
                  link_text: http://kovacek.co/chun.schamberger
                  source: http://fahey-robel.co/millie.satterfield
                  enabled: true
                  release_date: '2021-09-09T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}/offers":
    get:
      summary: Retrieves a Campaigns offers through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/articles":
    get:
      summary: Retrieves a Campaigns articles
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/offers":
    get:
      summary: Retrieves a Campaigns articles
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/learning_topics":
    get:
      summary: Retrieves a Campaigns learning topics
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/causes":
    get:
      summary: Retrieves all causes
      tags:
      - API::V1 -> Causes
      responses:
        '200':
          description: causes found
          content:
            application/json:
              example:
                data:
                - id: 928
                  name: bucketize it
                  image: http://fisher-homenick.co/sidney
                  icon: http://howell-kautzer.net/gaston_carroll
                  joiners: 32
                  description: Facere voluptate molestiae enim.
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/causes/{id}":
    get:
      summary: Retrieves a cause
      tags:
      - API::V1 -> Causes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: cause found
          content:
            application/json:
              example:
                id: 929
                name: heavy lifting
                image: http://maggio.net/santa.block
                icon: http://west.com/ricki.smith
                joiners: 3
                description: Illum optio nam est.
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Cause with 'id'=something_invalid
  "/api/v1/faqs":
    get:
      summary: Retrieves all faqs
      tags:
      - API::V1 -> Frequently Asked Questions
      responses:
        '200':
          description: faqs found
          content:
            application/json:
              example:
                data:
                - id: 65
                  question: bandwidth-constrained
                  answer: button up the loose ends
                  created_at: '2021-10-03T15:38:45.010Z'
                  updated_at: '2021-10-03T15:38:45.010Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  question:
                    type: string
                  answer:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/offers":
    get:
      summary: Retrieves all offers
      tags:
      - API::V1 -> Offers
      responses:
        '200':
          description: offers found
          content:
            application/json:
              example:
                data:
                - id: 129
                  title: t-shirt sizes
                  description: Omnis dolor quam nam.
                  link: http://mraz.biz/estelle
                  campaign_id: 8153
                  created_at: '2021-10-03T15:38:45.035Z'
                  updated_at: '2021-10-03T15:38:45.035Z'
                  campaign_action_id: 3728
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
  "/api/v1/offers/{id}":
    get:
      summary: Retrieves a offer
      tags:
      - API::V1 -> Offers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: offer found
          content:
            application/json:
              example:
                data:
                  id: 130
                  title: swim lane
                  description: Esse quia dolores voluptas.
                  link: http://fadel-mcdermott.com/leta
                  campaign_id: 8155
                  created_at: '2021-10-03T15:38:45.051Z'
                  updated_at: '2021-10-03T15:38:45.051Z'
                  campaign_action_id: 3729
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Offer with 'id'=something_invalid
  "/api/v1/organisations":
    get:
      summary: Retrieves all organisations
      tags:
      - API::V1 -> Organisations
      responses:
        '200':
          description: organisations found
          content:
            application/json:
              example:
                data:
                - id: 2555
                  name: home stretch
                  description: Ullam ea voluptatem explicabo.
                  logo_link: http://hahn-oconnell.name/gracia
                  created_at: '2021-10-03T15:38:45.064Z'
                  updated_at: '2021-10-03T15:38:45.064Z'
                  email: daniel_flatley@stroman-reinger.biz
                  website: http://donnelly.net/conception
                  IG_link: http://bogan.biz/carolann.rempel
                  FB_link: http://walsh.io/german
                  twitter_link: http://blanda.org/elvin_hirthe
                  extra_text_1: Optio assumenda reiciendis et.
                  extra_text_2:
                  extra_text_3:
                  extra_link_1: http://franecki.net/cordell.dickinson
                  extra_link_2:
                  extra_link_3:
                  organisation_type:
                  code: HCUYWXNQ
                  geographic_reach:
                  campaigns: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  logo_link:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  email:
                    type: string
                  website:
                    type: string
                  IG_link:
                    type: string
                  FB_link:
                    type: string
                  twitter_link:
                    type: string
                  extra_text_1:
                    type: string
                  extra_text_2:
                    type: string
                  extra_text_3:
                    type: string
                  extra_link_1:
                    type: string
                  extra_link_2:
                    type: string
                  extra_link_3:
                    type: string
                  organisation_type:
                    type: string
                  code:
                    type: string
                  geographic_reach:
                    type: string
  "/api/v1/organisations/{id}":
    get:
      summary: Retrieves a organisation
      tags:
      - API::V1 -> Organisations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: organisation found
          content:
            application/json:
              example:
                data:
                  id: 2556
                  name: granular
                  description: Ipsam qui accusamus natus.
                  logo_link: http://fay-gleason.io/mack_hessel
                  created_at: '2021-10-03T15:38:45.078Z'
                  updated_at: '2021-10-03T15:38:45.078Z'
                  email: evelin_waelchi@king.info
                  website: http://herzog.net/boris.morissette
                  IG_link: http://satterfield.biz/beatrice_jacobi
                  FB_link: http://hudson.name/ardell.welch
                  twitter_link: http://ratke.com/shayne_damore
                  extra_text_1: Nobis et unde dolor.
                  extra_text_2:
                  extra_text_3:
                  extra_link_1: http://shields.biz/wiley
                  extra_link_2:
                  extra_link_3:
                  organisation_type:
                  code: XFGUDBNT
                  geographic_reach:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  logo_link:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  email:
                    type: string
                  website:
                    type: string
                  IG_link:
                    type: string
                  FB_link:
                    type: string
                  twitter_link:
                    type: string
                  extra_text_1:
                    type: string
                  extra_text_2:
                    type: string
                  extra_text_3:
                    type: string
                  extra_link_1:
                    type: string
                  extra_link_2:
                    type: string
                  extra_link_3:
                    type: string
                  organisation_type:
                    type: string
                  code:
                    type: string
                  geographic_reach:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Organisation with 'id'=something_invalid
  "/api/v1/press_coverage":
    get:
      summary: Retrieves all press_coverage
      tags:
      - API::V1 -> Press coverage
      responses:
        '200':
          description: press_coverage found
          content:
            application/json:
              example:
                data:
                - id: 193
                  image_url: http://hirthe-lehner.name/alphonso_morissette
                  link: http://predovic.info/mercedes
                  media_name: out of the box
                  created_at: '2021-10-03T15:38:45.106Z'
                  updated_at: '2021-10-03T15:38:45.106Z'
                  title: rubber meets the road
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image_url:
                    type: string
                  link:
                    type: string
                  media_name:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  title:
                    type: string
  "/api/v1/press_coverage/{id}":
    get:
      summary: Retrieves a press_coverage
      tags:
      - API::V1 -> Press coverage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: press_coverage found
          content:
            application/json:
              example:
                data:
                  id: 194
                  image_url: http://legros.co/ronnie.feeney
                  link: http://lubowitz.biz/guillermo_reichel
                  media_name: bleeding edge
                  created_at: '2021-10-03T15:38:45.113Z'
                  updated_at: '2021-10-03T15:38:45.113Z'
                  title: bleeding edge
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image_url:
                    type: string
                  link:
                    type: string
                  media_name:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  title:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find PressCoverageArticle with 'id'=something_invalid
  "/api/v1/quizzes":
    get:
      summary: Retrieves all quizzes
      tags:
      - API::V1 -> Quizzes
      responses:
        '200':
          description: quizzes found
          content:
            application/json:
              example:
                data:
                - id: 327
                  title: streamline
                  description: Nihil qui et corporis.
                  questions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/quizzes/{id}":
    get:
      summary: Retrieves a quiz
      tags:
      - API::V1 -> Quizzes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: quiz found
          content:
            application/json:
              example:
                data:
                  id: 328
                  title: let's take this offline
                  description: Laborum dolore esse quam.
                  questions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Quiz with 'id'=something_invalid
  "/api/v2/actions":
    get:
      summary: 'If no user token header present, completed: ''User not authenticated'''
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign Actions found!
          content:
            application/json:
              example:
                data:
                - id: 3731
                  title: out of pocket
                  link: http://dibbert-pollich.info/regine
                  type:
                  campaign_id: 8158
                  created_at: '2021-10-03T15:38:45.232Z'
                  updated_at: '2021-10-03T15:38:45.232Z'
                  what_description: Ex rem officiis et.
                  why_description: Quia omnis omnis et.
                  time: 0.1
                  enabled: true
                  release_date: '2021-05-26T00:00:00.000Z'
                  end_date: '2021-11-01T00:00:00.000Z'
                  causes:
                  - id: 932
                    image: http://wiegand.name/travis
                    icon: http://marvin.io/dirk.bahringer
                    name: buying cycle
                    description: Aut non neque rerum.
                    joiners: 1
                    created_at: '2021-10-03T15:38:45.224Z'
                    updated_at: '2021-10-03T15:38:45.224Z'
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
  "/api/v2/actions?cause__in=[{cause_id}]":
    get:
      summary: Filters campaign actions by cause id's
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: cause_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign Action found!
          content:
            application/json:
              example:
                data:
                - id: 3735
                  title: circle back
                  link: http://jones.info/tamisha_rolfson
                  type:
                  campaign_id: 8162
                  created_at: '2021-10-03T15:38:45.297Z'
                  updated_at: '2021-10-03T15:38:45.297Z'
                  what_description: In aut veniam sunt.
                  why_description: Maxime non ut ab.
                  time: 0.1
                  enabled: true
                  release_date: '2021-03-19T00:00:00.000Z'
                  end_date: '2021-09-06T00:00:00.000Z'
                  causes:
                  - id: 936
                    image: http://pfeffer.io/chia.keeling
                    icon: http://stoltenberg.biz/jefferey.cassin
                    name: penetrate the market
                    description: Molestiae occaecati et et.
                    joiners: 7
                    created_at: '2021-10-03T15:38:45.290Z'
                    updated_at: '2021-10-03T15:38:45.290Z'
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
  "/api/v2/actions/{id}":
    get:
      summary: Getting a specific action
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign Action found! (with user header)
          content:
            application/json:
              example:
                data:
                  id: 3736
                  title: out of the box
                  link: http://schamberger-oreilly.com/kyle
                  type:
                  campaign_id: 8163
                  created_at: '2021-10-03T15:38:45.313Z'
                  updated_at: '2021-10-03T15:38:45.313Z'
                  what_description: Libero vel eius ut.
                  why_description: Animi eos ipsam et.
                  time: 0.1
                  enabled: true
                  release_date: '2021-01-20T00:00:00.000Z'
                  end_date: '2021-06-10T00:00:00.000Z'
                  causes:
                  - id: 937
                    image: http://erdman.biz/britt
                    icon: http://treutel.name/roy
                    name: data points
                    description: Cumque quasi assumenda ut.
                    joiners: 61
                    created_at: '2021-10-03T15:38:45.306Z'
                    updated_at: '2021-10-03T15:38:45.306Z'
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
  "/api/v2/campaigns":
    get:
      summary: 'Retrieves all Campaigns. If user token header present, returns with
        a completed: null/completed param.'
      tags:
      - API::V2(latest) -> Campaigns
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                - id: 8167
                  title: infographic
                  description_app: Doloribus rerum sint ut.
                  header_image: http://dare.name/tiana
                  created_at: '2021-10-03T15:38:45.408Z'
                  updated_at: '2021-10-03T15:38:45.408Z'
                  video_link: http://grady.net/isaac_bashirian
                  description_web:
                  enabled: true
                  start_date: '2021-02-10T00:00:00.000Z'
                  end_date: '2021-02-08T00:00:00.000Z'
                  short_name: Ramps marfa banh mi flexitarian quinoa everyday pork
                    belly five dollar toast street.
                  infographic_url: http://willms.name/gene_konopelski
                  causes:
                  - id: 941
                    image: http://hudson.biz/porter_labadie
                    icon: http://halvorson-schultz.info/jeffrey
                    name: value add
                    description: Laborum inventore enim qui.
                    joiners: 3
                    created_at: '2021-10-03T15:38:45.403Z'
                    updated_at: '2021-10-03T15:38:45.403Z'
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/campaigns?cause__in=[{cause_id}]":
    get:
      summary: Filters campaigns by cause id's
      tags:
      - API::V2(latest) -> Campaigns
      parameters:
      - name: cause_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found!
          content:
            application/json:
              example:
                data:
                - id: 8171
                  title: penetrate the market
                  description_app: Omnis et quo optio.
                  header_image: http://mante-emmerich.name/cherie
                  created_at: '2021-10-03T15:38:45.473Z'
                  updated_at: '2021-10-03T15:38:45.473Z'
                  video_link: http://cassin.io/scotty
                  description_web:
                  enabled: true
                  start_date: '2021-03-24T00:00:00.000Z'
                  end_date: '2021-07-29T00:00:00.000Z'
                  short_name: Bitters tattooed hella drinking.
                  infographic_url: http://watsica.biz/kim.howe
                  causes:
                  - id: 945
                    image: http://renner-block.co/benton
                    icon: http://abernathy.com/olen_homenick
                    name: snackable content
                    description: Aut magni sequi quo.
                    joiners: 12
                    created_at: '2021-10-03T15:38:45.468Z'
                    updated_at: '2021-10-03T15:38:45.468Z'
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
  "/api/v2/campaigns/{id}":
    get:
      summary: Getting a specific campaign
      tags:
      - API::V2(latest) -> Campaigns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign found! (with user header)
          content:
            application/json:
              example:
                data:
                  id: 8173
                  title: two-way street
                  description_app: Quibusdam laborum voluptas et.
                  header_image: http://wyman.biz/tory
                  created_at: '2021-10-03T15:38:45.512Z'
                  updated_at: '2021-10-03T15:38:45.512Z'
                  video_link: http://renner-bode.info/shae_flatley
                  description_web:
                  enabled: true
                  start_date: '2021-02-13T00:00:00.000Z'
                  end_date: '2021-11-16T00:00:00.000Z'
                  short_name: Hoodie sustainable tattooed chartreuse shoreditch.
                  infographic_url: http://watsica-stokes.co/haydee
                  causes:
                  - id: 947
                    image: http://homenick.co/chuck
                    icon: http://medhurst.org/rosena
                    name: get a pulse on
                    description: Veritatis sed quo et.
                    joiners: 7
                    created_at: '2021-10-03T15:38:45.507Z'
                    updated_at: '2021-10-03T15:38:45.507Z'
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
  "/api/v2/causes":
    get:
      summary: 'Retrieves all Causes. If user token header present, returns with a
        joined: null/joined param.'
      tags:
      - API::V2(latest) -> Causes
      responses:
        '200':
          description: Cause found
          content:
            application/json:
              example:
                data:
                - id: 949
                  image: http://kilback-rippin.io/ulysses
                  icon: http://mckenzie-daniel.com/dane
                  name: value proposition
                  description: Debitis corrupti porro quia.
                  joiners: 3
                  created_at: '2021-10-03T15:38:45.539Z'
                  updated_at: '2021-10-03T15:38:45.539Z'
                  joined: Not yet implemented
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/user/actions":
    get:
      summary: Retrieves all actions from said user
      tags:
      - API::V2(latest) -> User Actions
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User actions found
          content:
            application/json:
              example:
                data:
                - id: 3737
                  title: tee it up
                  link: http://homenick.name/domenic.dach
                  type:
                  campaign_id: 8174
                  created_at: '2021-10-03T15:38:45.577Z'
                  updated_at: '2021-10-03T15:38:45.577Z'
                  what_description: Voluptas quibusdam eveniet sed.
                  why_description: Hic sed repudiandae autem.
                  time: 0.1
                  enabled: true
                  release_date: '2021-07-21T00:00:00.000Z'
                  end_date: '2021-01-18T00:00:00.000Z'
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
        '401':
          description: User not authenticated
          content:
            application/json:
              example:
                message: User authorization failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
  "/api/v2/user/actions/{id}":
    get:
      summary: Getting a specific user action
      tags:
      - API::V2(latest) -> User Actions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User action found!
          content:
            application/json:
              example:
                data:
                - id: 3740
                  title: streamline
                  link: http://hahn.co/shirley
                  type:
                  campaign_id: 8177
                  created_at: '2021-10-03T15:38:45.656Z'
                  updated_at: '2021-10-03T15:38:45.656Z'
                  what_description: Ut quod ut labore.
                  why_description: Aliquam sint velit hic.
                  time: 0.1
                  enabled: true
                  release_date: '2021-07-23T00:00:00.000Z'
                  end_date: '2021-11-15T00:00:00.000Z'
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
  "/api/v2/user/campaigns":
    get:
      summary: Not including the correct header
      tags:
      - API::V2(latest) -> User Campaigns
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User campaigns found
          content:
            application/json:
              example:
                data:
                - id: 8178
                  title: thought leadership
                  description_app: Et perspiciatis voluptatibus sed.
                  header_image: http://schinner.com/collin
                  created_at: '2021-10-03T15:38:45.686Z'
                  updated_at: '2021-10-03T15:38:45.686Z'
                  video_link: http://durgan-schumm.io/hayden
                  description_web:
                  enabled: true
                  start_date: '2021-08-06T00:00:00.000Z'
                  end_date: '2021-02-22T00:00:00.000Z'
                  short_name: Distillery seitan post-ironic brooklyn chia selfies
                    messenger bag semiotics.
                  infographic_url: http://wintheiser.info/francesco
                  causes: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
        '401':
          description: User not authenticated
          content:
            application/json:
              example:
                message: User authorization failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
  "/api/v2/user/campaigns/{id}":
    get:
      summary: Getting a specific user action
      tags:
      - API::V2(latest) -> User Campaigns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User campaign found!
          content:
            application/json:
              example:
                data:
                - id: 8180
                  title: gamification
                  description_app: Et sint ad illo.
                  header_image: http://rau.co/kelsey
                  created_at: '2021-10-03T15:38:45.737Z'
                  updated_at: '2021-10-03T15:38:45.737Z'
                  video_link: http://sipes.net/trenton.mertz
                  description_web:
                  enabled: true
                  start_date: '2021-02-19T00:00:00.000Z'
                  end_date: '2021-07-01T00:00:00.000Z'
                  short_name: Paleo tacos portland scenester.
                  infographic_url: http://mann.name/earnestine
                  causes: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: api.now-u.com
