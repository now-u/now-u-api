---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/articles":
    get:
      summary: Retrieves all articles
      tags:
      - API::V1 -> Articles
      responses:
        '200':
          description: articles found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
  "/api/v1/articles/{id}":
    get:
      summary: Retrieves a article
      tags:
      - API::V1 -> Articles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: article found
          content:
            application/json:
              example:
                data:
                  id: 2
                  title: gamification
                  body: Autem ipsam dolor repellat.
                  header_image: http://reilly-reinger.com/demarcus
                  full_article_link: http://ullrich.co/vito
                  video_link: http://brown.co/yolando.cruickshank
                  campaign_action_id: 3
                  campaign_id: 6
                  created_at: '2023-01-02T21:49:49.344Z'
                  updated_at: '2023-01-02T21:49:49.344Z'
                  video_of_the_day:
                  subtitle: synergy
                  link_text: http://haag.net/lanell
                  source: http://beahan.io/lelia
                  enabled: true
                  release_date: '2023-08-12T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Article with 'id'=something_invalid
  "/api/v1/blogs":
    get:
      summary: Retrieves all blogs
      tags:
      - API::V1 -> Blogs
      responses:
        '200':
          description: blogs found
          content:
            application/json:
              example:
              - id: 1
                title: penetrate the market
                subtitle: Modi nam maiores dolor.
                campaign_action_id: 7
                user_id: 1
                campaign_id: 12
                reading_time: 90
                created_at: '2023-01-02T21:49:49.442Z'
                updated_at: '2023-01-02T21:49:49.442Z'
                enabled: true
                header_image: http://cremin-ortiz.io/thanh_cummerata
                tags: []
                user:
                  full_name: Saul Corwin
                  profile_picture_url:
                  description:
  "/api/v1/blogs/{id}":
    get:
      summary: Retrieves a blog
      tags:
      - API::V1 -> Blogs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: blog found
          content:
            application/json:
              example:
                data:
                  blog:
                    id: 2
                    title: immersive experience
                    subtitle: Ut est quo laboriosam.
                    campaign_action_id: 9
                    user_id: 2
                    campaign_id: 15
                    reading_time: 89
                    created_at: '2023-01-02T21:49:49.501Z'
                    updated_at: '2023-01-02T21:49:49.501Z'
                    enabled: true
                    header_image: http://morissette.co/rodolfo.hansen
                    tags: []
                    user:
                      full_name: Susy Dach
                      profile_picture_url:
                      description:
                sections: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  subtitle:
                    type: string
                  campaign_action_id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  reading_time:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  enabled:
                    type: boolean
                  header_image:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find BlogArticle with 'id'=something_invalid
  "/api/v1/campaigns":
    get:
      summary: Retrieves all Campaigns
      tags:
      - API::V1 -> Campaigns
      responses:
        '200':
          description: Campaigns found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
  "/api/v1/campaigns/{campaign_id}":
    get:
      summary: Retrieves a Campaign
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions":
    get:
      summary: Retrieves a Campaigns actions
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaigns actions found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}":
    get:
      summary: Retrieves a Campaigns action through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find CampaignAction with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}/articles":
    get:
      summary: Retrieves a Campaigns articles through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                - id: 5
                  title: granular
                  body: Optio quibusdam laborum magnam.
                  header_image: http://weissnat.co/gary_osinski
                  full_article_link: http://hammes-oberbrunner.net/kimberly_runolfsson
                  video_link: http://pagac.info/miquel_graham
                  campaign_action_id: 16
                  campaign_id: 31
                  created_at: '2023-01-02T21:49:49.687Z'
                  updated_at: '2023-01-02T21:49:49.687Z'
                  video_of_the_day:
                  subtitle: two-way street
                  link_text: http://schmidt-graham.co/winford
                  source: http://pagac.net/orlando.cormier
                  enabled: true
                  release_date: '2023-11-20T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}/offers":
    get:
      summary: Retrieves a Campaigns offers through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/articles":
    get:
      summary: Retrieves a Campaigns articles
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/offers":
    get:
      summary: Retrieves a Campaigns articles
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/learning_topics":
    get:
      summary: Retrieves a Campaigns learning topics
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/causes":
    get:
      summary: Retrieves all causes
      tags:
      - API::V1 -> Causes
      responses:
        '200':
          description: causes found
          content:
            application/json:
              example:
                data:
                - id: 68
                  name: best practice
                  image: http://feil.net/tiffani
                  icon: http://daugherty-weber.io/jacquetta
                  joiners: 7
                  description: Aut quidem labore veniam.
                - id: 69
                  name: synergy
                  image: http://stanton-morar.biz/emile_ohara
                  icon: http://huels.org/jose.ratke
                  joiners: 8
                  description: Rem laborum dolores corrupti.
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/causes/{id}":
    get:
      summary: Retrieves a cause
      tags:
      - API::V1 -> Causes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: cause found
          content:
            application/json:
              example:
                id: 70
                name: ideate
                image: http://green-collins.biz/dave
                icon: http://marquardt-zieme.co/marlin
                joiners: 28
                description: Nisi itaque ducimus qui.
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Cause with 'id'=something_invalid
  "/api/v1/faqs":
    get:
      summary: Retrieves all faqs
      tags:
      - API::V1 -> Frequently Asked Questions
      responses:
        '200':
          description: faqs found
          content:
            application/json:
              example:
                data:
                - id: 1
                  question: gamification
                  answer: out of pocket
                  created_at: '2023-01-02T21:49:49.856Z'
                  updated_at: '2023-01-02T21:49:49.856Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  question:
                    type: string
                  answer:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/offers":
    get:
      summary: Retrieves all offers
      tags:
      - API::V1 -> Offers
      responses:
        '200':
          description: offers found
          content:
            application/json:
              example:
                data:
                - id: 1
                  title: make it actionable
                  description: Quia illum id dolorem.
                  link: http://stokes.biz/arlie
                  campaign_id: 49
                  created_at: '2023-01-02T21:49:49.892Z'
                  updated_at: '2023-01-02T21:49:49.892Z'
                  campaign_action_id: 25
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
  "/api/v1/offers/{id}":
    get:
      summary: Retrieves a offer
      tags:
      - API::V1 -> Offers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: offer found
          content:
            application/json:
              example:
                data:
                  id: 2
                  title: learnings
                  description: Sed est ratione sit.
                  link: http://ebert.io/valentin_watsica
                  campaign_id: 52
                  created_at: '2023-01-02T21:49:49.922Z'
                  updated_at: '2023-01-02T21:49:49.922Z'
                  campaign_action_id: 27
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Offer with 'id'=something_invalid
  "/api/v1/organisations":
    get:
      summary: Retrieves all organisations
      tags:
      - API::V1 -> Organisations
      responses:
        '200':
          description: organisations found
          content:
            application/json:
              example:
                data:
                - id: 4
                  name: agile marketing
                  description: Eum soluta facilis ullam.
                  logo_link: http://mayert.name/arnulfo_schimmel
                  created_at: '2023-01-02T21:49:49.930Z'
                  updated_at: '2023-01-02T21:49:49.930Z'
                  email: rusty@lynch.name
                  website: http://kuvalis.net/carlita_larson
                  IG_link: http://koepp-schuppe.net/stacey
                  FB_link: http://marvin.co/cathie
                  twitter_link: http://keebler.biz/kurt.johnston
                  extra_text_1: Hic molestiae alias porro.
                  extra_text_2:
                  extra_text_3:
                  extra_link_1: http://luettgen-gorczany.biz/dee.mueller
                  extra_link_2:
                  extra_link_3:
                  organisation_type:
                  code: ILXSCWVT
                  geographic_reach:
                  campaigns: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  logo_link:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  email:
                    type: string
                  website:
                    type: string
                  IG_link:
                    type: string
                  FB_link:
                    type: string
                  twitter_link:
                    type: string
                  extra_text_1:
                    type: string
                  extra_text_2:
                    type: string
                  extra_text_3:
                    type: string
                  extra_link_1:
                    type: string
                  extra_link_2:
                    type: string
                  extra_link_3:
                    type: string
                  organisation_type:
                    type: string
                  code:
                    type: string
                  geographic_reach:
                    type: string
  "/api/v1/organisations/{id}":
    get:
      summary: Retrieves a organisation
      tags:
      - API::V1 -> Organisations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: organisation found
          content:
            application/json:
              example:
                data:
                  id: 5
                  name: had to 'punt' on that
                  description: Eligendi molestiae quos laborum.
                  logo_link: http://daugherty.net/dawna.bogan
                  created_at: '2023-01-02T21:49:49.942Z'
                  updated_at: '2023-01-02T21:49:49.942Z'
                  email: isaac@yost.info
                  website: http://tromp.info/kasey
                  IG_link: http://willms-daugherty.net/dorene
                  FB_link: http://pacocha.biz/laverne
                  twitter_link: http://boyle.biz/janet.flatley
                  extra_text_1: Fuga unde qui eum.
                  extra_text_2:
                  extra_text_3:
                  extra_link_1: http://flatley.com/jamee
                  extra_link_2:
                  extra_link_3:
                  organisation_type:
                  code: YCJMZTQP
                  geographic_reach:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  logo_link:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  email:
                    type: string
                  website:
                    type: string
                  IG_link:
                    type: string
                  FB_link:
                    type: string
                  twitter_link:
                    type: string
                  extra_text_1:
                    type: string
                  extra_text_2:
                    type: string
                  extra_text_3:
                    type: string
                  extra_link_1:
                    type: string
                  extra_link_2:
                    type: string
                  extra_link_3:
                    type: string
                  organisation_type:
                    type: string
                  code:
                    type: string
                  geographic_reach:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Organisation with 'id'=something_invalid
  "/api/v1/press_coverage":
    get:
      summary: Retrieves all press_coverage
      tags:
      - API::V1 -> Press coverage
      responses:
        '200':
          description: press_coverage found
          content:
            application/json:
              example:
                data:
                - id: 1
                  image_url: http://jacobi.biz/marcelene.mayer
                  link: http://watsica-mayer.biz/marcella_davis
                  media_name: button up the loose ends
                  created_at: '2023-01-02T21:49:49.959Z'
                  updated_at: '2023-01-02T21:49:49.959Z'
                  title: best practice
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image_url:
                    type: string
                  link:
                    type: string
                  media_name:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  title:
                    type: string
  "/api/v1/press_coverage/{id}":
    get:
      summary: Retrieves a press_coverage
      tags:
      - API::V1 -> Press coverage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: press_coverage found
          content:
            application/json:
              example:
                data:
                  id: 2
                  image_url: http://bailey.org/kimber.heller
                  link: http://zulauf.io/garnett.pollich
                  media_name: thought leadership
                  created_at: '2023-01-02T21:49:49.964Z'
                  updated_at: '2023-01-02T21:49:49.964Z'
                  title: streamline
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image_url:
                    type: string
                  link:
                    type: string
                  media_name:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  title:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find PressCoverageArticle with 'id'=something_invalid
  "/api/v1/quizzes":
    get:
      summary: Retrieves all quizzes
      tags:
      - API::V1 -> Quizzes
      responses:
        '200':
          description: quizzes found
          content:
            application/json:
              example:
                data:
                - id: 1
                  title: impact map
                  description: Repudiandae ipsum commodi sit.
                  questions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/quizzes/{id}":
    get:
      summary: Retrieves a quiz
      tags:
      - API::V1 -> Quizzes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: quiz found
          content:
            application/json:
              example:
                data:
                  id: 2
                  title: get a pulse on
                  description: Modi non eius accusantium.
                  questions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Quiz with 'id'=something_invalid
  "/api/v2/actions":
    get:
      summary: 'If no user token header present, completed: ''User not authenticated'''
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign Actions found!
          content:
            application/json:
              example:
                data:
                - id: 29
                  title: circle back
                  link: http://fisher-jacobs.co/clair
                  type:
                  campaign_id: 55
                  created_at: '2023-01-02T21:49:50.037Z'
                  updated_at: '2023-01-02T21:49:50.037Z'
                  what_description: Excepturi nihil non animi.
                  why_description: Accusantium qui veritatis magnam.
                  time: 0.1
                  enabled: true
                  release_date: '2023-05-18T00:00:00.000Z'
                  end_date: '2023-11-04T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes:
                  - id: 87
                    image: http://rau-sporer.io/jessie
                    icon: http://zulauf-lemke.io/genevieve.schaefer
                    name: buying cycle
                    description: Quia ea molestiae eius.
                    joiners: 40
                    created_at: '2023-01-02T21:49:50.030Z'
                    updated_at: '2023-01-02T21:49:50.030Z'
                    joined: Authentication failed
                  - id: 89
                    image: http://prohaska.biz/oswaldo
                    icon: http://fritsch.biz/broderick
                    name: market share
                    description: Earum quidem sed adipisci.
                    joiners: 80
                    created_at: '2023-01-02T21:49:50.039Z'
                    updated_at: '2023-01-02T21:49:50.039Z'
                    joined: Authentication failed
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
  "/api/v2/actions?cause__in=[{cause_id}]":
    get:
      summary: Filters campaign actions by cause id's
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: cause_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign Action found!
          content:
            application/json:
              example:
                data:
                - id: 33
                  title: sprint to the finish line
                  link: http://carroll.org/carey
                  type:
                  campaign_id: 59
                  created_at: '2023-01-02T21:49:50.127Z'
                  updated_at: '2023-01-02T21:49:50.127Z'
                  what_description: Saepe quas omnis enim.
                  why_description: Et maiores voluptas ex.
                  time: 0.1
                  enabled: true
                  release_date: '2023-12-22T00:00:00.000Z'
                  end_date: '2023-12-25T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes:
                  - id: 99
                    image: http://oreilly-stoltenberg.com/rhett
                    icon: http://barrows.net/marietta
                    name: swim lane
                    description: Rem omnis qui possimus.
                    joiners: 95
                    created_at: '2023-01-02T21:49:50.118Z'
                    updated_at: '2023-01-02T21:49:50.118Z'
                    joined: Authentication failed
                  - id: 101
                    image: http://waters-kunze.io/jenine_johns
                    icon: http://paucek-lind.io/cherilyn_feil
                    name: circle back
                    description: Voluptatem ut architecto libero.
                    joiners: 75
                    created_at: '2023-01-02T21:49:50.129Z'
                    updated_at: '2023-01-02T21:49:50.129Z'
                    joined: Authentication failed
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
  "/api/v2/actions/{id}":
    get:
      summary: Getting a specific action
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign Action found! (with user header)
          content:
            application/json:
              example:
                data:
                  id: 34
                  title: get value out of the conversation
                  link: http://runolfsson.net/marget
                  type:
                  campaign_id: 60
                  created_at: '2023-01-02T21:49:50.143Z'
                  updated_at: '2023-01-02T21:49:50.143Z'
                  what_description: Numquam asperiores autem fuga.
                  why_description: Nihil officia culpa amet.
                  time: 0.1
                  enabled: true
                  release_date: '2023-08-26T00:00:00.000Z'
                  end_date: '2023-09-29T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes:
                  - id: 102
                    image: http://wilkinson-hills.co/arnette.mckenzie
                    icon: http://littel-botsford.info/cristin_cremin
                    name: granular
                    description: Architecto nihil autem dicta.
                    joiners: 20
                    created_at: '2023-01-02T21:49:50.137Z'
                    updated_at: '2023-01-02T21:49:50.137Z'
                    joined: false
                  - id: 104
                    image: http://blanda.com/avis
                    icon: http://rice.io/gertrud
                    name: sales funnel
                    description: At et sed nobis.
                    joiners: 6
                    created_at: '2023-01-02T21:49:50.146Z'
                    updated_at: '2023-01-02T21:49:50.146Z'
                    joined: false
                  completed: false
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
  "/api/v2/campaigns":
    get:
      summary: 'Retrieves all Campaigns. If user token header present, returns with
        a completed: true/false param.'
      tags:
      - API::V2(latest) -> Campaigns
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/campaigns/{id}":
    get:
      summary: Getting a specific campaign
      tags:
      - API::V2(latest) -> Campaigns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign found! (with user header)
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
  "/api/v2/campaigns?cause__in=[{cause_id}]":
    get:
      summary: Filters campaigns by cause id's
      tags:
      - API::V2(latest) -> Campaigns
      parameters:
      - name: cause_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found!
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
  "/api/v2/causes":
    get:
      summary: 'Retrieves cause from cause id. If user token header present, returns
        with joined: true/false.'
      tags:
      - API::V2(latest) -> Causes
      responses:
        '200':
          description: Cause found
          content:
            application/json:
              example:
                data:
                - id: 133
                  image: http://jakubowski.biz/shirl.labadie
                  icon: http://jakubowski-skiles.co/chassidy_sipes
                  name: bucketize it
                  description: Eligendi distinctio nobis nulla.
                  joiners: 91
                  created_at: '2023-01-02T21:49:50.374Z'
                  updated_at: '2023-01-02T21:49:50.374Z'
                  joined: false
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/learning_resources":
    get:
      summary: 'Retrieves all Learning Resources. If user token header present, returns
        with a completed: null/completed param.'
      tags:
      - API::V2(latest) -> Learning Resources
      responses:
        '200':
          description: Learning Resource found!
          content:
            application/json:
              example:
                data:
                - id: 4
                  title: expansion play
                  time: 0.1
                  link: http://fisher-fay.io/starla.dare
                  type:
                  learning_topic_id: 4
                  created_at: '2023-01-02T21:49:50.512Z'
                  updated_at: '2023-01-02T21:49:50.512Z'
                  source:
                  release_date: '2023-03-07T00:00:00.000Z'
                  end_date: '2023-06-14T00:00:00.000Z'
                  causes:
                  - id: 146
                    image: http://schimmel.com/maira_hoppe
                    icon: http://larkin-swift.info/danilo
                    name: home stretch
                    description: Fugiat nihil praesentium labore.
                    joiners: 5
                    created_at: '2023-01-02T21:49:50.504Z'
                    updated_at: '2023-01-02T21:49:50.504Z'
                    joined: false
                  - id: 148
                    image: http://hills.biz/toney_gottlieb
                    icon: http://mertz.io/herb_kunde
                    name: thought leadership
                    description: Saepe voluptate animi autem.
                    joiners: 71
                    created_at: '2023-01-02T21:49:50.514Z'
                    updated_at: '2023-01-02T21:49:50.514Z'
                    joined: false
                  completed: false
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  time:
                    type: float
                  link:
                    type: string
                  type:
                    type: string
                  learning_topic_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  source:
                    type: string
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/learning_resources/{id}":
    get:
      summary: Getting a specific learning_resource
      tags:
      - API::V2(latest) -> Learning Resource
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Learning Resource found! (with user header)
          content:
            application/json:
              example:
                data:
                  id: 7
                  title: agile marketing
                  time: 0.1
                  link: http://crona-macgyver.com/norris
                  type:
                  learning_topic_id: 7
                  created_at: '2023-01-02T21:49:50.580Z'
                  updated_at: '2023-01-02T21:49:50.580Z'
                  source:
                  release_date: '2023-03-14T00:00:00.000Z'
                  end_date: '2023-09-04T00:00:00.000Z'
                  causes:
                  - id: 155
                    image: http://monahan-schamberger.info/barry
                    icon: http://reichert.net/lawana_vonrueden
                    name: growth unit
                    description: Eum officiis facere dolor.
                    joiners: 56
                    created_at: '2023-01-02T21:49:50.573Z'
                    updated_at: '2023-01-02T21:49:50.573Z'
                    joined: false
                  - id: 157
                    image: http://hane.net/brooks
                    icon: http://cassin-johnson.io/selena
                    name: infographic
                    description: Laudantium quia aut accusamus.
                    joiners: 57
                    created_at: '2023-01-02T21:49:50.582Z'
                    updated_at: '2023-01-02T21:49:50.582Z'
                    joined: false
                  completed: true
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  time:
                    type: float
                  link:
                    type: string
                  type:
                    type: string
                  learning_topic_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  source:
                    type: string
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
  "/api/v2/learning_resources?cause__in=[{cause_id}]":
    get:
      summary: Filters learning_resources by cause id's
      tags:
      - API::V2(latest) -> Learning Resources
      parameters:
      - name: cause_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Learning Resource found!
          content:
            application/json:
              example:
                data:
                - id: 11
                  title: out of the box
                  time: 0.1
                  link: http://waelchi.info/leigh.bayer
                  type:
                  learning_topic_id: 11
                  created_at: '2023-01-02T21:49:50.669Z'
                  updated_at: '2023-01-02T21:49:50.669Z'
                  source:
                  release_date: '2023-10-12T00:00:00.000Z'
                  end_date: '2023-12-19T00:00:00.000Z'
                  causes:
                  - id: 167
                    image: http://bahringer.info/brendon_hammes
                    icon: http://schiller.name/walter.sawayn
                    name: get value out of the conversation
                    description: Nam occaecati in eos.
                    joiners: 1
                    created_at: '2023-01-02T21:49:50.661Z'
                    updated_at: '2023-01-02T21:49:50.661Z'
                    joined: Authentication failed
                  - id: 169
                    image: http://beer-paucek.info/eleanor_wiegand
                    icon: http://gulgowski.net/mickey_buckridge
                    name: penetrate the market
                    description: Velit doloribus necessitatibus placeat.
                    joiners: 63
                    created_at: '2023-01-02T21:49:50.671Z'
                    updated_at: '2023-01-02T21:49:50.671Z'
                    joined: Authentication failed
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  time:
                    type: float
                  link:
                    type: string
                  type:
                    type: string
                  learning_topic_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  source:
                    type: string
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
  "/api/v2/user/actions":
    get:
      summary: Retrieves all actions from said user
      tags:
      - API::V2(latest) -> User Actions
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User actions found
          content:
            application/json:
              example:
                data:
                - id: 35
                  title: customer journey
                  link: http://jaskolski-barton.co/delmar_moen
                  type:
                  campaign_id: 83
                  created_at: '2023-01-02T21:49:50.696Z'
                  updated_at: '2023-01-02T21:49:50.696Z'
                  what_description: Officiis rerum assumenda voluptate.
                  why_description: Exercitationem adipisci ducimus officia.
                  time: 0.1
                  enabled: true
                  release_date: '2023-01-12T00:00:00.000Z'
                  end_date: '2023-10-28T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes:
                  - id: 171
                    image: http://kreiger.org/maxwell_runolfsdottir
                    icon: http://rice.org/eugene
                    name: SWAG
                    description: Sapiente ut officiis molestiae.
                    joiners: 63
                    created_at: '2023-01-02T21:49:50.698Z'
                    updated_at: '2023-01-02T21:49:50.698Z'
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
        '401':
          description: User not authenticated
          content:
            application/json:
              example:
                message: User authorization failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
  "/api/v2/user/actions/{id}":
    get:
      summary: Getting a specific user action
      tags:
      - API::V2(latest) -> User Actions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User action found!
          content:
            application/json:
              example:
                data:
                - id: 38
                  title: agile marketing
                  link: http://pfannerstill.io/nam
                  type:
                  campaign_id: 86
                  created_at: '2023-01-02T21:49:50.758Z'
                  updated_at: '2023-01-02T21:49:50.758Z'
                  what_description: Odio debitis in voluptates.
                  why_description: Nam consequatur laborum minus.
                  time: 0.1
                  enabled: true
                  release_date: '2023-04-09T00:00:00.000Z'
                  end_date: '2023-09-09T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes:
                  - id: 177
                    image: http://muller-effertz.info/carla
                    icon: http://nitzsche.biz/felix_white
                    name: tee it up
                    description: Rerum nihil aut veniam.
                    joiners: 5
                    created_at: '2023-01-02T21:49:50.759Z'
                    updated_at: '2023-01-02T21:49:50.759Z'
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
  "/api/v2/user/campaigns":
    get:
      summary: Not including the correct header
      tags:
      - API::V2(latest) -> User Campaigns
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User campaigns found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
        '401':
          description: User not authenticated
          content:
            application/json:
              example:
                message: User authorization failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
  "/api/v2/user/campaigns/{id}":
    get:
      summary: Getting a specific user action
      tags:
      - API::V2(latest) -> User Campaigns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User campaign found!
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: api.now-u.com
