---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/articles":
    get:
      summary: Retrieves all articles
      tags:
      - API::V1 -> Articles
      responses:
        '200':
          description: articles found
          content:
            application/json:
              example:
                data:
                - id: 148
                  title: synergy
                  body: Qui magni reprehenderit error.
                  header_image: http://gulgowski-schultz.info/roscoe
                  full_article_link: http://glover.io/steven.reinger
                  video_link: http://senger-hodkiewicz.org/jeffery
                  campaign_action_id: 2538
                  campaign_id: 6102
                  created_at: '2022-02-10T21:37:35.691Z'
                  updated_at: '2022-02-10T21:37:35.691Z'
                  video_of_the_day:
                  subtitle: market share
                  link_text: http://fay.org/minh_kovacek
                  source: http://lueilwitz-swaniawski.name/jennette
                  enabled: true
                  release_date: '2022-01-08T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
  "/api/v1/articles/{id}":
    get:
      summary: Retrieves a article
      tags:
      - API::V1 -> Articles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: article found
          content:
            application/json:
              example:
                data:
                  id: 149
                  title: give you some time back
                  body: Ea qui tempore animi.
                  header_image: http://williamson.info/kimi_ferry
                  full_article_link: http://bashirian.biz/deandre.kunze
                  video_link: http://schroeder-ullrich.io/gerry
                  campaign_action_id: 2539
                  campaign_id: 6104
                  created_at: '2022-02-10T21:37:35.734Z'
                  updated_at: '2022-02-10T21:37:35.734Z'
                  video_of_the_day:
                  subtitle: etc. etc.
                  link_text: http://hirthe-zboncak.info/colton
                  source: http://windler.org/rosaline_ullrich
                  enabled: true
                  release_date: '2022-03-03T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Article with 'id'=something_invalid
  "/api/v1/blogs":
    get:
      summary: Retrieves all blogs
      tags:
      - API::V1 -> Blogs
      responses:
        '200':
          description: blogs found
          content:
            application/json:
              example:
              - id: 182
                title: plug and chug
                subtitle: Reprehenderit aut fugit nam.
                campaign_action_id: 2541
                user_id: 2066
                campaign_id: 6108
                reading_time: 34
                created_at: '2022-02-10T21:37:35.844Z'
                updated_at: '2022-02-10T21:37:35.844Z'
                enabled: true
                header_image: http://bergstrom-schuster.io/edwardo.dare
                tags: []
                user:
                  full_name: Lester Hane
                  profile_picture_url:
                  description:
  "/api/v1/blogs/{id}":
    get:
      summary: Retrieves a blog
      tags:
      - API::V1 -> Blogs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: blog found
          content:
            application/json:
              example:
                data:
                  blog:
                    id: 183
                    title: ideate
                    subtitle: Fugit omnis eos quis.
                    campaign_action_id: 2542
                    user_id: 2067
                    campaign_id: 6110
                    reading_time: 5
                    created_at: '2022-02-10T21:37:35.881Z'
                    updated_at: '2022-02-10T21:37:35.881Z'
                    enabled: true
                    header_image: http://runolfsdottir-rohan.io/angila
                    tags: []
                    user:
                      full_name: Jada Schmitt
                      profile_picture_url:
                      description:
                sections: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  subtitle:
                    type: string
                  campaign_action_id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  reading_time:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  enabled:
                    type: boolean
                  header_image:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find BlogArticle with 'id'=something_invalid
  "/api/v1/campaigns":
    get:
      summary: Retrieves all Campaigns
      tags:
      - API::V1 -> Campaigns
      responses:
        '200':
          description: Campaigns found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
  "/api/v1/campaigns/{campaign_id}":
    get:
      summary: Retrieves a Campaign
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                  id: 6114
                  title: value proposition
                  description_app: Totam ipsa reprehenderit impedit.
                  header_image: http://olson.io/buster_waelchi
                  created_at: '2022-02-10T21:37:35.938Z'
                  updated_at: '2022-02-10T21:37:35.938Z'
                  video_link: http://pagac.name/wilda.kertzmann
                  description_web:
                  enabled: true
                  start_date: '2022-02-07T00:00:00.000Z'
                  end_date: '2022-07-17T00:00:00.000Z'
                  short_name: Helvetica tumblr try-hard carry shoreditch.
                  number_of_campaigners: 0
                  number_of_completed_actions: 0
                  general_partners: []
                  campaign_partners: []
                  sdgs: []
                  key_aims: []
                  campaign_actions: []
                  learning_topics: []
                  infographic_url: http://runolfsson.net/oscar.altenwerth
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions":
    get:
      summary: Retrieves a Campaigns actions
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaigns actions found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}":
    get:
      summary: Retrieves a Campaigns action through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                  id: 2544
                  title: value proposition
                  link: http://nienow.org/ma_smitham
                  type:
                  campaign_id: 6118
                  created_at: '2022-02-10T21:37:36.001Z'
                  updated_at: '2022-02-10T21:37:36.001Z'
                  what_description: Amet quo sed eius.
                  why_description: Minus perspiciatis fuga ut.
                  time: 0.1
                  enabled: true
                  release_date: '2022-10-12T00:00:00.000Z'
                  end_date: '2022-09-02T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  campaign:
                    id: 6118
                    title: ideate
                    description_app: Exercitationem pariatur voluptatum quis.
                    header_image: http://howell-fahey.com/stanton.turner
                    created_at: '2022-02-10T21:37:35.998Z'
                    updated_at: '2022-02-10T21:37:35.998Z'
                    video_link: http://mayert-auer.co/eve.krajcik
                    description_web:
                    enabled: true
                    start_date: '2022-12-24T00:00:00.000Z'
                    end_date: '2022-07-11T00:00:00.000Z'
                    short_name: Asymmetrical offal bitters microdosing tousled truffaut
                      mustache you probably haven't heard of them waistcoat.
                    infographic_url: http://torp.co/yvonne
                    of_the_month: false
                    recommended: false
                    status: draft
                    number_of_campaigners: 0
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find CampaignAction with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}/articles":
    get:
      summary: Retrieves a Campaigns articles through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                - id: 152
                  title: customer journey
                  body: Aut ut animi sed.
                  header_image: http://kirlin.co/danette.schmeler
                  full_article_link: http://sanford.name/marisha_gislason
                  video_link: http://schamberger-terry.io/angla
                  campaign_action_id: 2546
                  campaign_id: 6123
                  created_at: '2022-02-10T21:37:36.049Z'
                  updated_at: '2022-02-10T21:37:36.049Z'
                  video_of_the_day:
                  subtitle: impact map
                  link_text: http://wunsch.com/jame
                  source: http://bartoletti-reilly.biz/jerrold_grady
                  enabled: true
                  release_date: '2022-01-15T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}/offers":
    get:
      summary: Retrieves a Campaigns offers through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/articles":
    get:
      summary: Retrieves a Campaigns articles
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/offers":
    get:
      summary: Retrieves a Campaigns articles
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/learning_topics":
    get:
      summary: Retrieves a Campaigns learning topics
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/causes":
    get:
      summary: Retrieves all causes
      tags:
      - API::V1 -> Causes
      responses:
        '200':
          description: causes found
          content:
            application/json:
              example:
                data:
                - id: 799
                  name: had to 'punt' on that
                  image: http://okuneva.org/jeannie
                  icon: http://rosenbaum.net/gale.keeling
                  joiners: 20
                  description: Placeat unde voluptate hic.
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/causes/{id}":
    get:
      summary: Retrieves a cause
      tags:
      - API::V1 -> Causes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: cause found
          content:
            application/json:
              example:
                id: 800
                name: had to 'punt' on that
                image: http://franecki.name/trey
                icon: http://armstrong.com/shemeka_cassin
                joiners: 86
                description: Eos harum sit temporibus.
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Cause with 'id'=something_invalid
  "/api/v1/faqs":
    get:
      summary: Retrieves all faqs
      tags:
      - API::V1 -> Frequently Asked Questions
      responses:
        '200':
          description: faqs found
          content:
            application/json:
              example:
                data:
                - id: 22
                  question: had to 'punt' on that
                  answer: penetrate the market
                  created_at: '2022-02-10T21:37:36.200Z'
                  updated_at: '2022-02-10T21:37:36.200Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  question:
                    type: string
                  answer:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/offers":
    get:
      summary: Retrieves all offers
      tags:
      - API::V1 -> Offers
      responses:
        '200':
          description: offers found
          content:
            application/json:
              example:
                data:
                - id: 43
                  title: rubber meets the road
                  description: Sint quam laboriosam incidunt.
                  link: http://kreiger.biz/oretha
                  campaign_id: 6138
                  created_at: '2022-02-10T21:37:36.223Z'
                  updated_at: '2022-02-10T21:37:36.223Z'
                  campaign_action_id: 2551
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
  "/api/v1/offers/{id}":
    get:
      summary: Retrieves a offer
      tags:
      - API::V1 -> Offers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: offer found
          content:
            application/json:
              example:
                data:
                  id: 44
                  title: snackable content
                  description: Nihil et nihil ut.
                  link: http://hickle-oconner.name/goldie_runolfsson
                  campaign_id: 6140
                  created_at: '2022-02-10T21:37:36.238Z'
                  updated_at: '2022-02-10T21:37:36.238Z'
                  campaign_action_id: 2552
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Offer with 'id'=something_invalid
  "/api/v1/organisations":
    get:
      summary: Retrieves all organisations
      tags:
      - API::V1 -> Organisations
      responses:
        '200':
          description: organisations found
          content:
            application/json:
              example:
                data:
                - id: 1230
                  name: thought leader
                  description: Omnis eius corporis officiis.
                  logo_link: http://farrell.com/connie
                  created_at: '2022-02-10T21:37:36.250Z'
                  updated_at: '2022-02-10T21:37:36.250Z'
                  email: lavonia_von@carroll.info
                  website: http://mayert.org/lisha.langosh
                  IG_link: http://donnelly.net/calandra
                  FB_link: http://lesch.org/tamie
                  twitter_link: http://simonis-terry.biz/dominick_sipes
                  extra_text_1: Quo qui magni quidem.
                  extra_text_2:
                  extra_text_3:
                  extra_link_1: http://cummerata.io/daron
                  extra_link_2:
                  extra_link_3:
                  organisation_type:
                  code: RJWVQMTH
                  geographic_reach:
                  campaigns: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  logo_link:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  email:
                    type: string
                  website:
                    type: string
                  IG_link:
                    type: string
                  FB_link:
                    type: string
                  twitter_link:
                    type: string
                  extra_text_1:
                    type: string
                  extra_text_2:
                    type: string
                  extra_text_3:
                    type: string
                  extra_link_1:
                    type: string
                  extra_link_2:
                    type: string
                  extra_link_3:
                    type: string
                  organisation_type:
                    type: string
                  code:
                    type: string
                  geographic_reach:
                    type: string
  "/api/v1/organisations/{id}":
    get:
      summary: Retrieves a organisation
      tags:
      - API::V1 -> Organisations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: organisation found
          content:
            application/json:
              example:
                data:
                  id: 1231
                  name: circle back
                  description: Est rem qui sit.
                  logo_link: http://legros.co/lloyd
                  created_at: '2022-02-10T21:37:36.263Z'
                  updated_at: '2022-02-10T21:37:36.263Z'
                  email: neal@mills-fritsch.org
                  website: http://auer.biz/yael
                  IG_link: http://hegmann.net/nita_nitzsche
                  FB_link: http://lakin.net/claude.reichert
                  twitter_link: http://weissnat.co/jacquetta_swift
                  extra_text_1: Laboriosam aut non repellendus.
                  extra_text_2:
                  extra_text_3:
                  extra_link_1: http://morar-harvey.io/lexie
                  extra_link_2:
                  extra_link_3:
                  organisation_type:
                  code: UDHEKLBV
                  geographic_reach:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  logo_link:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  email:
                    type: string
                  website:
                    type: string
                  IG_link:
                    type: string
                  FB_link:
                    type: string
                  twitter_link:
                    type: string
                  extra_text_1:
                    type: string
                  extra_text_2:
                    type: string
                  extra_text_3:
                    type: string
                  extra_link_1:
                    type: string
                  extra_link_2:
                    type: string
                  extra_link_3:
                    type: string
                  organisation_type:
                    type: string
                  code:
                    type: string
                  geographic_reach:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Organisation with 'id'=something_invalid
  "/api/v1/press_coverage":
    get:
      summary: Retrieves all press_coverage
      tags:
      - API::V1 -> Press coverage
      responses:
        '200':
          description: press_coverage found
          content:
            application/json:
              example:
                data:
                - id: 64
                  image_url: http://schmeler.org/cinderella_lockman
                  link: http://metz.net/ariel_bailey
                  media_name: give you some time back
                  created_at: '2022-02-10T21:37:36.288Z'
                  updated_at: '2022-02-10T21:37:36.288Z'
                  title: rubber meets the road
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image_url:
                    type: string
                  link:
                    type: string
                  media_name:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  title:
                    type: string
  "/api/v1/press_coverage/{id}":
    get:
      summary: Retrieves a press_coverage
      tags:
      - API::V1 -> Press coverage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: press_coverage found
          content:
            application/json:
              example:
                data:
                  id: 65
                  image_url: http://west-powlowski.co/brynn_hettinger
                  link: http://white.biz/mellie
                  media_name: infographic
                  created_at: '2022-02-10T21:37:36.295Z'
                  updated_at: '2022-02-10T21:37:36.295Z'
                  title: granular
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image_url:
                    type: string
                  link:
                    type: string
                  media_name:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  title:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find PressCoverageArticle with 'id'=something_invalid
  "/api/v1/quizzes":
    get:
      summary: Retrieves all quizzes
      tags:
      - API::V1 -> Quizzes
      responses:
        '200':
          description: quizzes found
          content:
            application/json:
              example:
                data:
                - id: 102
                  title: let's take this offline
                  description: Eius eum asperiores atque.
                  questions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/quizzes/{id}":
    get:
      summary: Retrieves a quiz
      tags:
      - API::V1 -> Quizzes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: quiz found
          content:
            application/json:
              example:
                data:
                  id: 103
                  title: plug and chug
                  description: Aut et aut inventore.
                  questions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Quiz with 'id'=something_invalid
  "/api/v2/actions":
    get:
      summary: 'If no user token header present, completed: ''User not authenticated'''
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign Actions found!
          content:
            application/json:
              example:
                data:
                - id: 2554
                  title: streamline
                  link: http://mcglynn.biz/kelvin.kemmer
                  type:
                  campaign_id: 6143
                  created_at: '2022-02-10T21:37:36.386Z'
                  updated_at: '2022-02-10T21:37:36.386Z'
                  what_description: Neque reiciendis consequatur dolor.
                  why_description: Quis vitae consequatur sed.
                  time: 0.1
                  enabled: true
                  release_date: '2022-03-02T00:00:00.000Z'
                  end_date: '2022-03-14T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes:
                  - id: 803
                    image: http://corwin.co/gena
                    icon: http://hackett.io/joyce_von
                    name: make it actionable
                    description: Odit est assumenda est.
                    joiners: 3
                    created_at: '2022-02-10T21:37:36.380Z'
                    updated_at: '2022-02-10T21:37:36.380Z'
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
  "/api/v2/actions?cause__in=[{cause_id}]":
    get:
      summary: Filters campaign actions by cause id's
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: cause_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign Action found!
          content:
            application/json:
              example:
                data:
                - id: 2558
                  title: t-shirt sizes
                  link: http://towne.net/teofila_becker
                  type:
                  campaign_id: 6147
                  created_at: '2022-02-10T21:37:36.445Z'
                  updated_at: '2022-02-10T21:37:36.445Z'
                  what_description: Qui est expedita impedit.
                  why_description: Laborum aut itaque corporis.
                  time: 0.1
                  enabled: true
                  release_date: '2022-02-04T00:00:00.000Z'
                  end_date: '2022-05-30T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes:
                  - id: 807
                    image: http://kuhic.org/royce
                    icon: http://macgyver-zulauf.name/isa
                    name: two-way street
                    description: Laudantium quisquam officia omnis.
                    joiners: 5
                    created_at: '2022-02-10T21:37:36.438Z'
                    updated_at: '2022-02-10T21:37:36.438Z'
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
  "/api/v2/actions/{id}":
    get:
      summary: Getting a specific action
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign Action found! (with user header)
          content:
            application/json:
              example:
                data:
                  id: 2559
                  title: make it actionable
                  link: http://halvorson.name/silvia
                  type:
                  campaign_id: 6148
                  created_at: '2022-02-10T21:37:36.460Z'
                  updated_at: '2022-02-10T21:37:36.460Z'
                  what_description: Sit et earum quia.
                  why_description: Tempora aut ipsum magnam.
                  time: 0.1
                  enabled: true
                  release_date: '2022-01-29T00:00:00.000Z'
                  end_date: '2022-12-01T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes:
                  - id: 808
                    image: http://schumm-gerhold.org/dung_wilkinson
                    icon: http://turcotte-schmidt.info/columbus_crooks
                    name: impact map
                    description: Qui enim quod occaecati.
                    joiners: 68
                    created_at: '2022-02-10T21:37:36.453Z'
                    updated_at: '2022-02-10T21:37:36.453Z'
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
  "/api/v2/campaigns":
    get:
      summary: 'Retrieves all Campaigns. If user token header present, returns with
        a completed: null/completed param.'
      tags:
      - API::V2(latest) -> Campaigns
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                - id: 6152
                  title: granular
                  description_app: Quibusdam eaque ut magnam.
                  header_image: http://schowalter.info/jean
                  created_at: '2022-02-10T21:37:36.552Z'
                  updated_at: '2022-02-10T21:37:36.552Z'
                  video_link: http://champlin.org/maryann.kunze
                  description_web:
                  enabled: true
                  start_date: '2022-01-29T00:00:00.000Z'
                  end_date: '2022-02-22T00:00:00.000Z'
                  short_name: Before they sold out pork belly cold-pressed listicle
                    kinfolk vice carry pour-over mustache.
                  infographic_url: http://ohara.biz/gala.wehner
                  of_the_month: false
                  recommended: false
                  status: draft
                  causes:
                  - id: 812
                    image: http://brekke-emmerich.org/shemeka.franecki
                    icon: http://sporer.info/jarred
                    name: thought leadership
                    description: Et mollitia officia natus.
                    joiners: 22
                    created_at: '2022-02-10T21:37:36.549Z'
                    updated_at: '2022-02-10T21:37:36.549Z'
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/campaigns/{id}":
    get:
      summary: Getting a specific campaign
      tags:
      - API::V2(latest) -> Campaigns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign found! (with user header)
          content:
            application/json:
              example:
                data:
                  id: 6154
                  title: customer journey
                  description_app: Et saepe quibusdam eum.
                  header_image: http://bernier.biz/corinne
                  created_at: '2022-02-10T21:37:36.603Z'
                  updated_at: '2022-02-10T21:37:36.603Z'
                  video_link: http://terry.name/patricia
                  description_web:
                  enabled: true
                  start_date: '2022-03-26T00:00:00.000Z'
                  end_date: '2022-12-13T00:00:00.000Z'
                  short_name: Intelligentsia viral keffiyeh stumptown.
                  infographic_url: http://bergnaum.io/curt
                  of_the_month: false
                  recommended: false
                  status: draft
                  causes:
                  - id: 814
                    image: http://gibson.info/paul
                    icon: http://wisozk.com/hong
                    name: infographic
                    description: A voluptatem consequatur id.
                    joiners: 9
                    created_at: '2022-02-10T21:37:36.599Z'
                    updated_at: '2022-02-10T21:37:36.599Z'
                  completed:
                  learning_resources: []
                  campaign_actions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
  "/api/v2/campaigns?cause__in=[{cause_id}]":
    get:
      summary: Filters campaigns by cause id's
      tags:
      - API::V2(latest) -> Campaigns
      parameters:
      - name: cause_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found!
          content:
            application/json:
              example:
                data:
                - id: 6158
                  title: tee it up
                  description_app: Sunt quidem est molestias.
                  header_image: http://bradtke-howe.co/davida
                  created_at: '2022-02-10T21:37:36.668Z'
                  updated_at: '2022-02-10T21:37:36.668Z'
                  video_link: http://stanton.net/rocky_kemmer
                  description_web:
                  enabled: true
                  start_date: '2022-12-14T00:00:00.000Z'
                  end_date: '2022-10-27T00:00:00.000Z'
                  short_name: Jean shorts tousled yr tattooed actually wayfarers cred.
                  infographic_url: http://thiel.biz/mike.wolf
                  of_the_month: false
                  recommended: false
                  status: draft
                  causes:
                  - id: 818
                    image: http://bins-ward.org/hester_medhurst
                    icon: http://larkin.io/isaiah
                    name: sales funnel
                    description: Quis et facilis nihil.
                    joiners: 2
                    created_at: '2022-02-10T21:37:36.664Z'
                    updated_at: '2022-02-10T21:37:36.664Z'
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
                  of_the_month:
                    type: boolean
                  recommended:
                    type: boolean
                  status:
                    type: integer
  "/api/v2/causes":
    get:
      summary: 'Retrieves all Causes. If user token header present, returns with a
        joined: null/joined param.'
      tags:
      - API::V2(latest) -> Causes
      responses:
        '200':
          description: Cause found
          content:
            application/json:
              example:
                data:
                - id: 820
                  image: http://rosenbaum-kshlerin.io/adrian.larson
                  icon: http://borer-purdy.com/vance
                  name: granular
                  description: Unde est error sed.
                  joiners: 5
                  created_at: '2022-02-10T21:37:36.682Z'
                  updated_at: '2022-02-10T21:37:36.682Z'
                  joined: Not yet implemented
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/user/actions":
    get:
      summary: Retrieves all actions from said user
      tags:
      - API::V2(latest) -> User Actions
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User actions found
          content:
            application/json:
              example:
                data:
                - id: 2560
                  title: value proposition
                  link: http://kohler.biz/dwayne_conroy
                  type:
                  campaign_id: 6159
                  created_at: '2022-02-10T21:37:36.713Z'
                  updated_at: '2022-02-10T21:37:36.713Z'
                  what_description: Cumque dolor rem asperiores.
                  why_description: Libero praesentium molestias voluptatibus.
                  time: 0.1
                  enabled: true
                  release_date: '2022-08-12T00:00:00.000Z'
                  end_date: '2022-10-03T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
        '401':
          description: User not authenticated
          content:
            application/json:
              example:
                message: User authorization failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
  "/api/v2/user/actions/{id}":
    get:
      summary: Getting a specific user action
      tags:
      - API::V2(latest) -> User Actions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User action found!
          content:
            application/json:
              example:
                data:
                - id: 2563
                  title: bleeding edge
                  link: http://nader.name/marlin
                  type:
                  campaign_id: 6162
                  created_at: '2022-02-10T21:37:36.777Z'
                  updated_at: '2022-02-10T21:37:36.777Z'
                  what_description: Quidem et accusantium aperiam.
                  why_description: Et et voluptatem sint.
                  time: 0.1
                  enabled: true
                  release_date: '2022-12-17T00:00:00.000Z'
                  end_date: '2022-09-18T00:00:00.000Z'
                  of_the_month: false
                  recommended: false
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
  "/api/v2/user/campaigns":
    get:
      summary: Not including the correct header
      tags:
      - API::V2(latest) -> User Campaigns
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User campaigns found
          content:
            application/json:
              example:
                data:
                - id: 6163
                  title: sales funnel
                  description_app: Ipsa quae nobis amet.
                  header_image: http://abbott-wintheiser.co/gregoria.ledner
                  created_at: '2022-02-10T21:37:36.802Z'
                  updated_at: '2022-02-10T21:37:36.802Z'
                  video_link: http://gibson.co/divina.stark
                  description_web:
                  enabled: true
                  start_date: '2022-01-24T00:00:00.000Z'
                  end_date: '2022-10-23T00:00:00.000Z'
                  short_name: Brooklyn brunch iphone ugh 3 wolf moon narwhal everyday.
                  infographic_url: http://emard-schumm.net/olin_beer
                  of_the_month: false
                  recommended: false
                  status: draft
                  causes: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
        '401':
          description: User not authenticated
          content:
            application/json:
              example:
                message: User authorization failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
  "/api/v2/user/campaigns/{id}":
    get:
      summary: Getting a specific user action
      tags:
      - API::V2(latest) -> User Campaigns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User campaign found!
          content:
            application/json:
              example:
                data:
                - id: 6165
                  title: buying cycle
                  description_app: Et delectus eos est.
                  header_image: http://haley.net/tierra_hegmann
                  created_at: '2022-02-10T21:37:36.844Z'
                  updated_at: '2022-02-10T21:37:36.844Z'
                  video_link: http://ondricka.info/jospeh
                  description_web:
                  enabled: true
                  start_date: '2022-09-12T00:00:00.000Z'
                  end_date: '2022-01-04T00:00:00.000Z'
                  short_name: Dreamcatcher scenester narwhal loko synth tote bag 3
                    wolf moon.
                  infographic_url: http://roob.net/celine
                  of_the_month: false
                  recommended: false
                  status: draft
                  causes: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
  "/api/v2/me/causes":
    post:
      summary: Join causes that are passed in through an array of cause_ids. Will
        need user token header
      tags:
      - API::V2(latest) -> Causes
      parameters:
      - name: token
        in: header
        schema:
          type: string
      - name: cause_ids
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Causes joined
          content:
            application/json:
              example:
                data: User successfully added to causes
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  cause_id:
                    type:
                  user_id:
                    type:
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: api.now-u.com
