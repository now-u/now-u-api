---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/articles":
    get:
      summary: Retrieves all articles
      tags:
      - API::V1 -> Articles
      responses:
        '200':
          description: articles found
          content:
            application/json:
              example:
                data:
                - id: 249
                  title: sprint to the finish line
                  body: Quaerat quis quasi non.
                  header_image: http://funk.net/walker
                  full_article_link: http://weber-rutherford.info/beverly
                  video_link: http://prohaska.name/reynaldo.renner
                  campaign_action_id: 2152
                  campaign_id: 4660
                  created_at: '2021-10-02T16:36:17.531Z'
                  updated_at: '2021-10-02T16:36:17.531Z'
                  video_of_the_day:
                  subtitle: bandwidth-constrained
                  link_text: http://dubuque.com/josefa.bailey
                  source: http://crooks-kutch.co/nakia
                  enabled: true
                  release_date: '2021-06-18T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
  "/api/v1/articles/{id}":
    get:
      summary: Retrieves a article
      tags:
      - API::V1 -> Articles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: article found
          content:
            application/json:
              example:
                data:
                  id: 250
                  title: bleeding edge
                  body: Ut quia enim facilis.
                  header_image: http://quitzon.net/phillis.gusikowski
                  full_article_link: http://langosh.io/corey.jones
                  video_link: http://grady-torp.biz/chas_prohaska
                  campaign_action_id: 2153
                  campaign_id: 4662
                  created_at: '2021-10-02T16:36:17.570Z'
                  updated_at: '2021-10-02T16:36:17.570Z'
                  video_of_the_day:
                  subtitle: best practice
                  link_text: http://goodwin.info/lee
                  source: http://wehner.info/waylon_nader
                  enabled: true
                  release_date: '2021-05-31T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Article with 'id'=something_invalid
  "/api/v1/blogs":
    get:
      summary: Retrieves all blogs
      tags:
      - API::V1 -> Blogs
      responses:
        '200':
          description: blogs found
          content:
            application/json:
              example:
              - id: 349
                title: agile marketing
                subtitle: Fuga culpa quia eaque.
                campaign_action_id: 2155
                user_id: 3098
                campaign_id: 4666
                reading_time: 4
                created_at: '2021-10-02T16:36:17.665Z'
                updated_at: '2021-10-02T16:36:17.665Z'
                enabled: true
                header_image: http://dibbert-schimmel.biz/donnie.nienow
                tags: []
                user:
                  full_name: Malisa Jacobson
                  profile_picture_url:
                  description:
  "/api/v1/blogs/{id}":
    get:
      summary: Retrieves a blog
      tags:
      - API::V1 -> Blogs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: blog found
          content:
            application/json:
              example:
                data:
                  blog:
                    id: 350
                    title: plug and chug
                    subtitle: Quia explicabo a eius.
                    campaign_action_id: 2156
                    user_id: 3099
                    campaign_id: 4668
                    reading_time: 39
                    created_at: '2021-10-02T16:36:17.704Z'
                    updated_at: '2021-10-02T16:36:17.704Z'
                    enabled: true
                    header_image: http://ziemann.net/kathleen_howe
                    tags: []
                    user:
                      full_name: Bradford Lang
                      profile_picture_url:
                      description:
                sections: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  subtitle:
                    type: string
                  campaign_action_id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  reading_time:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  enabled:
                    type: boolean
                  header_image:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find BlogArticle with 'id'=something_invalid
  "/api/v1/campaigns":
    get:
      summary: Retrieves all Campaigns
      tags:
      - API::V1 -> Campaigns
      responses:
        '200':
          description: Campaigns found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
  "/api/v1/campaigns/{campaign_id}":
    get:
      summary: Retrieves a Campaign
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                  id: 4672
                  title: button up the loose ends
                  description_app: Fuga assumenda voluptatem perferendis.
                  header_image: http://nikolaus-boehm.info/michal
                  created_at: '2021-10-02T16:36:17.759Z'
                  updated_at: '2021-10-02T16:36:17.759Z'
                  video_link: http://kunde.biz/corrin_leannon
                  description_web:
                  enabled: true
                  start_date: '2021-09-06T00:00:00.000Z'
                  end_date: '2021-04-25T00:00:00.000Z'
                  short_name: Shoreditch asymmetrical tousled heirloom tacos.
                  number_of_campaigners: 0
                  number_of_completed_actions: 0
                  general_partners: []
                  campaign_partners: []
                  sdgs: []
                  key_aims: []
                  campaign_actions: []
                  learning_topics: []
                  infographic_url: http://collier.net/idalia_rau
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions":
    get:
      summary: Retrieves a Campaigns actions
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaigns actions found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}":
    get:
      summary: Retrieves a Campaigns action through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                  id: 2158
                  title: t-shirt sizes
                  link: http://glover.biz/marco.bartell
                  type:
                  campaign_id: 4676
                  created_at: '2021-10-02T16:36:17.841Z'
                  updated_at: '2021-10-02T16:36:17.841Z'
                  what_description: Possimus et rerum ullam.
                  why_description: Sed ab atque sint.
                  time: 0.1
                  enabled: true
                  release_date: '2021-05-03T00:00:00.000Z'
                  end_date: '2021-12-21T00:00:00.000Z'
                  campaign:
                    id: 4676
                    title: t-shirt sizes
                    description_app: Rerum fugit aperiam architecto.
                    header_image: http://effertz-okon.biz/noe
                    created_at: '2021-10-02T16:36:17.838Z'
                    updated_at: '2021-10-02T16:36:17.838Z'
                    video_link: http://conroy.io/heriberto.feeney
                    description_web:
                    enabled: true
                    start_date: '2021-04-06T00:00:00.000Z'
                    end_date: '2021-10-24T00:00:00.000Z'
                    short_name: Cray cred neutra direct trade messenger bag poutine
                      pork belly trust fund.
                    infographic_url: http://hegmann.name/jerry.hermann
                    number_of_campaigners: 0
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find CampaignAction with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}/articles":
    get:
      summary: Retrieves a Campaigns articles through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                - id: 253
                  title: streamline
                  body: Eaque molestias vel dolores.
                  header_image: http://douglas-grimes.name/dustin_bruen
                  full_article_link: http://durgan.info/rosalee
                  video_link: http://buckridge.biz/gay.bayer
                  campaign_action_id: 2160
                  campaign_id: 4681
                  created_at: '2021-10-02T16:36:17.937Z'
                  updated_at: '2021-10-02T16:36:17.937Z'
                  video_of_the_day:
                  subtitle: gamification
                  link_text: http://bradtke.com/erlene_robel
                  source: http://skiles.com/sixta_stroman
                  enabled: true
                  release_date: '2021-12-01T00:00:00.000Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/actions/{action_id}/offers":
    get:
      summary: Retrieves a Campaigns offers through action id
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/articles":
    get:
      summary: Retrieves a Campaigns articles
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: text
                  header_image:
                    type: string
                  full_article_link:
                    type: string
                  video_link:
                    type: string
                  campaign_action_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_of_the_day:
                    type: boolean
                  subtitle:
                    type: string
                  link_text:
                    type: string
                  source:
                    type: string
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/offers":
    get:
      summary: Retrieves a Campaigns articles
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/campaigns/{campaign_id}/learning_topics":
    get:
      summary: Retrieves a Campaigns learning topics
      tags:
      - API::V1 -> Campaigns
      parameters:
      - name: campaign_id
        in: path
        required: true
        schema:
          type: string
      - name: action_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Campaign with 'id'=something_invalid
  "/api/v1/causes":
    get:
      summary: Retrieves all causes
      tags:
      - API::V1 -> Causes
      responses:
        '200':
          description: causes found
          content:
            application/json:
              example:
                data:
                - id: 447
                  name: plug and chug
                  image: http://buckridge.name/candelaria.cole
                  icon: http://casper-metz.biz/myrtle
                  joiners: 0
                  description: Eum quod voluptates aut.
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/causes/{id}":
    get:
      summary: Retrieves a cause
      tags:
      - API::V1 -> Causes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: cause found
          content:
            application/json:
              example:
                id: 448
                name: plug and chug
                image: http://ondricka.org/albertha
                icon: http://wiza.com/ellen_white
                joiners: 8
                description: Sed et ut voluptatibus.
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Cause with 'id'=something_invalid
  "/api/v1/faqs":
    get:
      summary: Retrieves all faqs
      tags:
      - API::V1 -> Frequently Asked Questions
      responses:
        '200':
          description: faqs found
          content:
            application/json:
              example:
                data:
                - id: 37
                  question: immersive experience
                  answer: infographic
                  created_at: '2021-10-02T16:36:18.113Z'
                  updated_at: '2021-10-02T16:36:18.113Z'
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  question:
                    type: string
                  answer:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/offers":
    get:
      summary: Retrieves all offers
      tags:
      - API::V1 -> Offers
      responses:
        '200':
          description: offers found
          content:
            application/json:
              example:
                data:
                - id: 73
                  title: impact map
                  description: Numquam accusantium dolorum ipsum.
                  link: http://wiegand.org/graham
                  campaign_id: 4696
                  created_at: '2021-10-02T16:36:18.140Z'
                  updated_at: '2021-10-02T16:36:18.140Z'
                  campaign_action_id: 2165
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
  "/api/v1/offers/{id}":
    get:
      summary: Retrieves a offer
      tags:
      - API::V1 -> Offers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: offer found
          content:
            application/json:
              example:
                data:
                  id: 74
                  title: expansion play
                  description: Ipsa veritatis animi sed.
                  link: http://hodkiewicz.com/alec_legros
                  campaign_id: 4698
                  created_at: '2021-10-02T16:36:18.158Z'
                  updated_at: '2021-10-02T16:36:18.158Z'
                  campaign_action_id: 2166
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: text
                  link:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  campaign_action_id:
                    type: integer
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Offer with 'id'=something_invalid
  "/api/v1/organisations":
    get:
      summary: Retrieves all organisations
      tags:
      - API::V1 -> Organisations
      responses:
        '200':
          description: organisations found
          content:
            application/json:
              example:
                data:
                - id: 1429
                  name: swim lane
                  description: Quia cumque suscipit non.
                  logo_link: http://stanton.net/mardell_wehner
                  created_at: '2021-10-02T16:36:18.178Z'
                  updated_at: '2021-10-02T16:36:18.178Z'
                  email: genevie@wolf.info
                  website: http://kassulke-simonis.net/gayle.zieme
                  IG_link: http://carter.co/alexia_farrell
                  FB_link: http://prohaska.org/deon_turner
                  twitter_link: http://homenick.biz/barry_kling
                  extra_text_1: Est voluptatibus a dignissimos.
                  extra_text_2:
                  extra_text_3:
                  extra_link_1: http://miller.biz/mathew.prohaska
                  extra_link_2:
                  extra_link_3:
                  organisation_type:
                  code: CERTXBDN
                  geographic_reach:
                  campaigns: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  logo_link:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  email:
                    type: string
                  website:
                    type: string
                  IG_link:
                    type: string
                  FB_link:
                    type: string
                  twitter_link:
                    type: string
                  extra_text_1:
                    type: string
                  extra_text_2:
                    type: string
                  extra_text_3:
                    type: string
                  extra_link_1:
                    type: string
                  extra_link_2:
                    type: string
                  extra_link_3:
                    type: string
                  organisation_type:
                    type: string
                  code:
                    type: string
                  geographic_reach:
                    type: string
  "/api/v1/organisations/{id}":
    get:
      summary: Retrieves a organisation
      tags:
      - API::V1 -> Organisations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: organisation found
          content:
            application/json:
              example:
                data:
                  id: 1430
                  name: circle back
                  description: Earum ducimus sed ut.
                  logo_link: http://mertz.com/vicente_connelly
                  created_at: '2021-10-02T16:36:18.191Z'
                  updated_at: '2021-10-02T16:36:18.191Z'
                  email: cinda_macejkovic@goldner-anderson.co
                  website: http://pfeffer.org/christina.bernier
                  IG_link: http://emmerich-abshire.info/vinita.pfeffer
                  FB_link: http://macejkovic.biz/alease_wilderman
                  twitter_link: http://cormier-nader.name/curt.auer
                  extra_text_1: Sit aspernatur dignissimos exercitationem.
                  extra_text_2:
                  extra_text_3:
                  extra_link_1: http://pacocha.biz/yong
                  extra_link_2:
                  extra_link_3:
                  organisation_type:
                  code: LJFUMBAV
                  geographic_reach:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  logo_link:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  email:
                    type: string
                  website:
                    type: string
                  IG_link:
                    type: string
                  FB_link:
                    type: string
                  twitter_link:
                    type: string
                  extra_text_1:
                    type: string
                  extra_text_2:
                    type: string
                  extra_text_3:
                    type: string
                  extra_link_1:
                    type: string
                  extra_link_2:
                    type: string
                  extra_link_3:
                    type: string
                  organisation_type:
                    type: string
                  code:
                    type: string
                  geographic_reach:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Organisation with 'id'=something_invalid
  "/api/v1/press_coverage":
    get:
      summary: Retrieves all press_coverage
      tags:
      - API::V1 -> Press coverage
      responses:
        '200':
          description: press_coverage found
          content:
            application/json:
              example:
                data:
                - id: 109
                  image_url: http://abernathy.com/stanton_dare
                  link: http://jones-damore.com/phyliss_hayes
                  media_name: out of the box
                  created_at: '2021-10-02T16:36:18.220Z'
                  updated_at: '2021-10-02T16:36:18.220Z'
                  title: learnings
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image_url:
                    type: string
                  link:
                    type: string
                  media_name:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  title:
                    type: string
  "/api/v1/press_coverage/{id}":
    get:
      summary: Retrieves a press_coverage
      tags:
      - API::V1 -> Press coverage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: press_coverage found
          content:
            application/json:
              example:
                data:
                  id: 110
                  image_url: http://mraz.info/lynwood
                  link: http://keeling-schaden.io/darin_leffler
                  media_name: sales funnel
                  created_at: '2021-10-02T16:36:18.227Z'
                  updated_at: '2021-10-02T16:36:18.227Z'
                  title: ideate
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image_url:
                    type: string
                  link:
                    type: string
                  media_name:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  title:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find PressCoverageArticle with 'id'=something_invalid
  "/api/v1/quizzes":
    get:
      summary: Retrieves all quizzes
      tags:
      - API::V1 -> Quizzes
      responses:
        '200':
          description: quizzes found
          content:
            application/json:
              example:
                data:
                - id: 193
                  title: penetrate the market
                  description: Id culpa consequuntur optio.
                  questions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
  "/api/v1/quizzes/{id}":
    get:
      summary: Retrieves a quiz
      tags:
      - API::V1 -> Quizzes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: quiz found
          content:
            application/json:
              example:
                data:
                  id: 194
                  title: tee it up
                  description: Incidunt quam doloribus non.
                  questions: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
        '404':
          description: Not found
          content:
            application/json:
              example:
                error: Couldn't find Quiz with 'id'=something_invalid
  "/api/v2/actions":
    get:
      summary: 'If no user token header present, completed: ''User not authenticated'''
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign Actions found!
          content:
            application/json:
              example:
                data:
                - id: 2168
                  title: swim lane
                  link: http://goodwin.org/erminia.kovacek
                  type:
                  campaign_id: 4701
                  created_at: '2021-10-02T16:36:18.312Z'
                  updated_at: '2021-10-02T16:36:18.312Z'
                  what_description: Qui laudantium aut quia.
                  why_description: Accusantium laborum distinctio molestiae.
                  time: 0.1
                  enabled: true
                  release_date: '2021-06-24T00:00:00.000Z'
                  end_date: '2021-12-05T00:00:00.000Z'
                  completed: Authentication failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
  "/api/v2/actions/{id}":
    get:
      summary: Getting a specific action
      tags:
      - API::V2(latest) -> Actions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign Action found! (with user header)
          content:
            application/json:
              example:
                data:
                  id: 2169
                  title: thought leadership
                  link: http://rohan.biz/gerri.olson
                  type:
                  campaign_id: 4702
                  created_at: '2021-10-02T16:36:18.323Z'
                  updated_at: '2021-10-02T16:36:18.323Z'
                  what_description: Debitis voluptates labore est.
                  why_description: Similique modi ut neque.
                  time: 0.1
                  enabled: true
                  release_date: '2021-11-20T00:00:00.000Z'
                  end_date: '2021-05-08T00:00:00.000Z'
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  link:
                    type: string
                  type:
                    type: string
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  what_description:
                    type: string
                  why_description:
                    type: string
                  time:
                    type: float
                  enabled:
                    type: boolean
                  release_date:
                    type: datetime
                  end_date:
                    type: datetime
  "/api/v2/campaigns":
    get:
      summary: 'Retrieves all Campaigns. If user token header present, returns with
        a completed: null/completed param.'
      tags:
      - API::V2(latest) -> Campaigns
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              example:
                data:
                - id: 4706
                  title: customer journey
                  description_app: Eius et natus nesciunt.
                  header_image: http://howell-crooks.info/felix
                  created_at: '2021-10-02T16:36:18.387Z'
                  updated_at: '2021-10-02T16:36:18.387Z'
                  video_link: http://mccullough.co/shannon
                  description_web:
                  enabled: true
                  start_date: '2021-08-09T00:00:00.000Z'
                  end_date: '2021-09-24T00:00:00.000Z'
                  short_name: Godard pickled yr forage phlogiston squid.
                  infographic_url: http://labadie.co/romeo
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/campaigns/{id}":
    get:
      summary: Getting a specific campaign
      tags:
      - API::V2(latest) -> Campaigns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Campaign found! (with user header)
          content:
            application/json:
              example:
                data:
                  id: 4708
                  title: circle back
                  description_app: Iste laudantium quibusdam amet.
                  header_image: http://osinski.net/galen
                  created_at: '2021-10-02T16:36:18.426Z'
                  updated_at: '2021-10-02T16:36:18.426Z'
                  video_link: http://lehner.net/neida
                  description_web:
                  enabled: true
                  start_date: '2021-02-21T00:00:00.000Z'
                  end_date: '2021-11-24T00:00:00.000Z'
                  short_name: Pbr&b readymade you probably haven't heard of them actually.
                  infographic_url: http://bednar.io/chun.pfannerstill
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  description_app:
                    type: text
                  header_image:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  video_link:
                    type: string
                  description_web:
                    type: text
                  enabled:
                    type: boolean
                  start_date:
                    type: datetime
                  end_date:
                    type: datetime
                  short_name:
                    type: string
                  infographic_url:
                    type: string
  "/api/v2/causes":
    get:
      summary: 'Retrieves all Causes. If user token header present, returns with a
        joined: null/joined param.'
      tags:
      - API::V2(latest) -> Causes
      responses:
        '200':
          description: Cause found
          content:
            application/json:
              example:
                data:
                - id: 451
                  image: http://streich-braun.info/salvatore.rath
                  icon: http://legros.biz/marilou
                  name: value add
                  description: Sit illo voluptatem ullam.
                  joiners: 4
                  created_at: '2021-10-02T16:36:18.452Z'
                  updated_at: '2021-10-02T16:36:18.452Z'
                  joined: Not yet implemented
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  image:
                    type: string
                  icon:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  joiners:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
      parameters:
      - name: token
        in: header
        schema:
          type: string
  "/api/v2/user/actions":
    get:
      summary: Retrieves all actions from said user
      tags:
      - API::V2(latest) -> User Actions
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User actions found
          content:
            application/json:
              example:
                data:
                - id: 2170
                  title: SWAG
                  link: http://olson-cartwright.name/roger_moen
                  type:
                  campaign_id: 4709
                  created_at: '2021-10-02T16:36:18.492Z'
                  updated_at: '2021-10-02T16:36:18.492Z'
                  what_description: Natus cum maxime molestiae.
                  why_description: Aliquam aut eveniet qui.
                  time: 0.1
                  enabled: true
                  release_date: '2021-09-06T00:00:00.000Z'
                  end_date: '2021-07-01T00:00:00.000Z'
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
        '401':
          description: User not authenticated
          content:
            application/json:
              example:
                message: User authorization failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
  "/api/v2/user/actions/{id}":
    get:
      summary: Getting a specific user action
      tags:
      - API::V2(latest) -> User Actions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User action found!
          content:
            application/json:
              example:
                data:
                - id: 2173
                  title: out of the box
                  link: http://keebler.co/carolyne
                  type:
                  campaign_id: 4712
                  created_at: '2021-10-02T16:36:18.567Z'
                  updated_at: '2021-10-02T16:36:18.567Z'
                  what_description: Maiores ut iusto dignissimos.
                  why_description: Totam ut quisquam minima.
                  time: 0.1
                  enabled: true
                  release_date: '2021-02-27T00:00:00.000Z'
                  end_date: '2021-10-16T00:00:00.000Z'
                  causes: []
                  completed:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_action_id:
                    type: integer
                  status:
                    type: string
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  comment:
                    type: string
  "/api/v2/user/campaigns":
    get:
      summary: Not including the correct header
      tags:
      - API::V2(latest) -> User Campaigns
      parameters:
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User campaigns found
          content:
            application/json:
              example:
                data:
                - id: 4713
                  title: ideate
                  description_app: Eaque aut earum voluptatem.
                  header_image: http://fisher-bernier.name/micki_windler
                  created_at: '2021-10-02T16:36:18.595Z'
                  updated_at: '2021-10-02T16:36:18.595Z'
                  video_link: http://casper.info/duncan_cruickshank
                  description_web:
                  enabled: true
                  start_date: '2021-01-31T00:00:00.000Z'
                  end_date: '2021-12-17T00:00:00.000Z'
                  short_name: Small batch normcore kinfolk raw denim sriracha readymade
                    cred umami truffaut.
                  infographic_url: http://russel.name/liana
                  causes: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
        '401':
          description: User not authenticated
          content:
            application/json:
              example:
                message: User authorization failed
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
  "/api/v2/user/campaigns/{id}":
    get:
      summary: Getting a specific user action
      tags:
      - API::V2(latest) -> User Campaigns
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: token
        in: header
        schema:
          type: string
      responses:
        '200':
          description: User campaign found!
          content:
            application/json:
              example:
                data:
                - id: 4715
                  title: put a bow on it
                  description_app: Cupiditate in quam animi.
                  header_image: http://bernier.io/abraham_huel
                  created_at: '2021-10-02T16:36:18.640Z'
                  updated_at: '2021-10-02T16:36:18.640Z'
                  video_link: http://schuppe-hansen.net/sol_reichel
                  description_web:
                  enabled: true
                  start_date: '2021-01-30T00:00:00.000Z'
                  end_date: '2021-07-30T00:00:00.000Z'
                  short_name: Intelligentsia actually 8-bit park.
                  infographic_url: http://dietrich.com/porter
                  causes: []
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  campaign_id:
                    type: integer
                  created_at:
                    type: datetime
                  updated_at:
                    type: datetime
                  progress:
                    type: integer
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: api.now-u.com
